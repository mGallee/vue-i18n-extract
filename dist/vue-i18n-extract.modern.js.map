{"version":3,"file":"vue-i18n-extract.modern.js","sources":["../src/report-command/vue-files.ts","../src/report-command/language-files.ts","../src/report-command/report.ts","../src/report-command/index.ts","../src/init-command/index.ts","../src/index.ts"],"sourcesContent":["import { SimpleFile, I18NItem } from '../types';\nimport isValidGlob from 'is-valid-glob';\nimport glob from 'glob';\nimport fs from 'fs';\n\nexport function readVueFiles (src: string): SimpleFile[] {\n  if (!isValidGlob(src)) {\n    throw new Error(`vueFiles isn't a valid glob pattern.`);\n  }\n\n  const targetFiles = glob.sync(src);\n\n  if (targetFiles.length === 0) {\n    throw new Error('vueFiles glob has no files.');\n  }\n\n  return targetFiles.map((f) => {\n    const fileName = f.replace(process.cwd(), '');\n    return { fileName, path: f, content: fs.readFileSync(f, 'utf8') };\n  });\n}\n\nfunction* getMatches (file: SimpleFile, regExp: RegExp, captureGroup = 1): IterableIterator<I18NItem> {\n  while (true) {\n    const match = regExp.exec(file.content);\n    if (match === null) {\n      break;\n    }\n    const line = (file.content.substring(0, match.index).match(/\\n/g) || []).length + 1;\n    yield {\n      path: match[captureGroup],\n      line,\n      file: file.fileName,\n    };\n  }\n}\n\n/**\n * Extracts translation keys from methods such as `$t` and `$tc`.\n *\n * - **regexp pattern**: (?:[$ .]tc?)\\(\n *\n *   **description**: Matches the sequence t( or tc(, optionally with either “$”, “.” or “ ” in front of it.\n *\n * - **regexp pattern**: ([\"'`])\n *\n *   **description**: 1. capturing group. Matches either “\"”, “'”, or “`”.\n *\n * - **regexp pattern**: ((?:[^\\\\]|\\\\.)*?)\n *\n *   **description**: 2. capturing group. Matches anything except a backslash\n *   *or* matches any backslash followed by any character (e.g. “\\\"”, “\\`”, “\\t”, etc.)\n *\n * - **regexp pattern**: \\1\n *\n *   **description**: matches whatever was matched by capturing group 1 (e.g. the starting string character)\n *\n * @param file a file object\n * @returns a list of translation keys found in `file`.\n */\n function extractMethodMatches (file: SimpleFile): I18NItem[] {\n  const methodRegExp = /(?:[$ .\"]tc?)\\(\\s*?([\"'`])((?:[^\\\\]|\\\\.)*?)\\1/g;\n  return [ ...getMatches(file, methodRegExp, 2) ];\n}\n\nfunction extractComponentMatches (file: SimpleFile): I18NItem[] {\n  const componentRegExp = /(?:<i18n)(?:.|\\n)*?(?:[^:]path=(\"|'))(.*?)\\1/gi;\n  return [ ...getMatches(file, componentRegExp, 2) ];\n}\n\nfunction extractDirectiveMatches (file: SimpleFile): I18NItem[] {\n  const directiveRegExp = /v-t=\"'(.*?)'\"/g;\n  return [ ...getMatches(file, directiveRegExp) ];\n}\n\nfunction extractI18nItemsFromVueFiles (sourceFiles: SimpleFile[]): I18NItem[] {\n  return sourceFiles.reduce((accumulator, file) => {\n    const methodMatches = extractMethodMatches(file);\n    const componentMatches = extractComponentMatches(file);\n    const directiveMatches = extractDirectiveMatches(file);\n    return [\n      ...accumulator,\n      ...methodMatches,\n      ...componentMatches,\n      ...directiveMatches,\n    ];\n  }, [] as I18NItem[]);\n}\n\nexport function parseVueFiles (vueFilesPath: string): I18NItem[] {\n  const filesList = readVueFiles(vueFilesPath);\n  return extractI18nItemsFromVueFiles(filesList);\n}\n","import path from 'path';\nimport fs from 'fs';\nimport glob from 'glob';\nimport dot from 'dot-object';\nimport yaml from 'js-yaml';\nimport isValidGlob from 'is-valid-glob';\nimport { LanguageFile, I18NLanguage, I18NItem } from '../types';\n\nfunction readLangFiles (src: string): LanguageFile[] {\n  if (!isValidGlob(src)) {\n    throw new Error(`languageFiles isn't a valid glob pattern.`);\n  }\n\n  const targetFiles = glob.sync(src);\n\n  if (targetFiles.length === 0) {\n    throw new Error('languageFiles glob has no files.');\n  }\n\n  return targetFiles.map(f => {\n    const langPath = path.resolve(process.cwd(), f);\n\n    const extension = langPath.substring(langPath.lastIndexOf('.')).toLowerCase();\n    const isJSON = extension === '.json';\n    const isYAML = extension === '.yaml' || extension === '.yml';\n\n    let langObj;\n    if (isJSON) {\n      langObj = JSON.parse(fs.readFileSync(langPath, 'utf8'));\n    } else if (isYAML) {\n      langObj = yaml.safeLoad(fs.readFileSync(langPath, 'utf8'));\n    } else {\n      langObj = eval(fs.readFileSync(langPath, 'utf8'));\n    }\n\n    const fileName = f.replace(process.cwd(), '');\n\n    return { fileName, path: f, content: langObj };\n  });\n}\n\nfunction extractI18nItemsFromLanguageFiles (languageFiles: LanguageFile[]): I18NLanguage {\n  return languageFiles.reduce((accumulator, file) => {\n    const language = file.fileName.substring(file.fileName.lastIndexOf('/') + 1, file.fileName.lastIndexOf('.'));\n\n    if (!accumulator[language]) {\n      accumulator[language] = [];\n    }\n\n    const flattenedObject = dot.dot(file.content);\n    Object.keys(flattenedObject).forEach((key, index) => {\n      accumulator[language]?.push({\n        line: index,\n        path: key,\n        file: file.fileName,\n      });\n    });\n\n    return accumulator;\n  }, {});\n}\n\nexport class LanguageFileUpdater {\n  languageFiles: LanguageFile[];\n  hasChanges = false;\n\n  constructor(languageFiles: string) {\n    this.languageFiles = readLangFiles(path.resolve(process.cwd(), languageFiles));\n  }\n\n  addMissingKeys(missingKeys: I18NItem[]): void {\n    this.hasChanges = true;\n    this.languageFiles.forEach(languageFile => {\n      missingKeys.forEach(item => {\n        if (item.language && languageFile.fileName.includes(item.language) || !item.language) {\n          dot.str(item.path, '', languageFile.content);\n        }\n      });\n    });\n  }\n\n  removeUnusedKeys(unusedKeys: I18NItem[]): void {\n    this.hasChanges = true;\n    this.languageFiles.forEach(languageFile => {\n      unusedKeys.forEach(item => {\n        if (item.language && languageFile.fileName.includes(item.language)) {\n          dot.delete(item.path, languageFile.content);\n        }\n      });\n    });\n  }\n\n  writeChanges(): void {\n    this.languageFiles.forEach(languageFile => {\n      new FileAccessLayer(languageFile.path).write(languageFile.content);\n    });\n  }\n}\n\n\nclass FileAccessLayer {\n  path: string;\n\n  constructor(path: string) {\n    this.path = path;\n  }\n\n  write(content: Record<string, unknown>) {\n    const rawJSON = JSON.stringify(content, null, 2);\n    const endsWith = ext => this.path.endsWith(`.${ext}`);\n    let stringifiedContent = \"\";\n\n    if (endsWith('json')) {\n      stringifiedContent = rawJSON;\n    } else if (endsWith('js')) {\n      stringifiedContent = `export default ${stringifiedContent}; \\n`;\n    } else if (endsWith('yaml') || endsWith('yml')) {\n      stringifiedContent = yaml.safeDump(content);\n    } else {\n      throw new Error('Filetype not supported.')\n    }\n    fs.writeFileSync(this.path, stringifiedContent);\n  }\n  // TODO: Move reading into this class\n}\n\nexport function parseLanguageFiles (languageFilesPath: string): I18NLanguage {\n  const filesList = readLangFiles(languageFilesPath);\n  return extractI18nItemsFromLanguageFiles(filesList);\n}\n","import fs from 'fs';\nimport { I18NItem, I18NLanguage, I18NReport } from '../types';\n\nexport enum VueI18NExtractReportTypes {\n  None = 0,\n  Missing = 1 << 0,\n  Unused = 1 << 1,\n  Dynamic = 1 << 2,\n  All = ~(~0 << 3)\n};\n\nconst mightBeUsedDynamically = function (languageItem: I18NItem, dynamicKeys: I18NItem[]): boolean {\n  return dynamicKeys.some(dynamicKey => languageItem.path.includes(dynamicKey.path));\n}\n\nexport function extractI18NReport (parsedVueFiles: I18NItem[], parsedLanguageFiles: I18NLanguage, reportType: VueI18NExtractReportTypes = VueI18NExtractReportTypes.Missing + VueI18NExtractReportTypes.Unused): I18NReport {\n  const missingKeys: I18NItem[] = [];\n  const unusedKeys: I18NItem[] = [];\n  const dynamicKeys: I18NItem[] = [];\n  const dynamicReportEnabled = reportType & VueI18NExtractReportTypes.Dynamic;\n\n  Object.keys(parsedLanguageFiles).forEach(language => {\n    let languageItems = parsedLanguageFiles[language];\n\n    parsedVueFiles.forEach(vueItem => {\n      const usedByVueItem = function (languageItem: I18NItem): boolean {\n        return languageItem.path === vueItem.path || languageItem.path.startsWith(vueItem.path + '.');\n      }\n\n      if (dynamicReportEnabled && (vueItem.path.includes('${') || vueItem.path.endsWith('.'))) {\n        dynamicKeys.push(({ ...vueItem, language }))\n        return\n      }\n\n      if (!parsedLanguageFiles[language].some(usedByVueItem)) {\n        missingKeys.push(({ ...vueItem, language }));\n      }\n\n      languageItems = languageItems.filter(languageItem => dynamicReportEnabled ?\n        !mightBeUsedDynamically(languageItem, dynamicKeys) && !usedByVueItem(languageItem) :\n        !usedByVueItem(languageItem));\n    });\n\n    unusedKeys.push(...languageItems.map((item) => ({ ...item, language })));\n  });\n\n  let extracts = {};\n  if (reportType & VueI18NExtractReportTypes.Missing) {\n    extracts = Object.assign(extracts, { missingKeys });\n  }\n  if (reportType & VueI18NExtractReportTypes.Unused) {\n    extracts = Object.assign(extracts, { unusedKeys });\n  }\n  if (dynamicReportEnabled) {\n    extracts = Object.assign(extracts, { dynamicKeys });\n  }\n\n  return extracts;\n}\n\nexport async function writeReportToFile (report: I18NReport, writePath: string): Promise<NodeJS.ErrnoException | void> {\n  const reportString = JSON.stringify(report);\n  return new Promise((resolve, reject) => {\n    fs.writeFile(\n      writePath,\n      reportString,\n      (err) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        resolve();\n      },\n    );\n  });\n}\n\n","import path from 'path';\nimport fs from 'fs';\n\nimport { ReportOptions, I18NReport } from '../types';\nimport { parseVueFiles } from './vue-files';\nimport { parseLanguageFiles, LanguageFileUpdater } from './language-files';\nimport { extractI18NReport, VueI18NExtractReportTypes, writeReportToFile } from './report';\n\nexport function createI18NReport (vueFiles: string, languageFiles: string, command: ReportOptions): I18NReport {\n  const resolvedVueFiles = path.resolve(process.cwd(), vueFiles);\n  const resolvedLanguageFiles = path.resolve(process.cwd(), languageFiles);\n\n  const parsedVueFiles = parseVueFiles(resolvedVueFiles);\n  const parsedLanguageFiles = parseLanguageFiles(resolvedLanguageFiles);\n\n  const reportType = command.dynamic ? VueI18NExtractReportTypes.All : (VueI18NExtractReportTypes.Missing + VueI18NExtractReportTypes.Unused);\n\n  return extractI18NReport(parsedVueFiles, parsedLanguageFiles, reportType);\n}\n\nexport function reportFromConfigCommand(): Promise<void> | void {\n  try {\n    const configFile = eval(fs.readFileSync(path.resolve(process.cwd(), 'vue-i18n-extract.config.js'), 'utf8'));\n    return reportCommand({\n      vueFiles: configFile.vueFilesPath,\n      languageFiles: configFile.languageFilesPath,\n      ...(configFile.options.output && {output: configFile.options.output }),\n      ...(configFile.options.add && { add: Boolean(configFile.options.add) }),\n      ...(configFile.options.dynamic && {dynamic: [false, 'ignore', 'report'].findIndex(e => e === configFile.options.dynamic) }),\n    });\n  } catch (err) {\n    console.error(err);\n  }\n}\n\nexport async function reportCommand (command: ReportOptions): Promise<void> {\n  const { vueFiles, languageFiles, output, add, remove, dynamic, ci } = command;\n  console.log(vueFiles);\n  const report = createI18NReport(vueFiles, languageFiles, command);\n  const updater = new LanguageFileUpdater(languageFiles);\n\n  if (report.missingKeys) console.info('missing keys: '), console.table(report.missingKeys);\n  if (report.unusedKeys) console.info('unused keys: '), console.table(report.unusedKeys);\n  if (report.dynamicKeys && dynamic && dynamic > 1) console.info('dynamic detected keys: '), console.table(report.dynamicKeys);\n\n  if (output) {\n    await writeReportToFile(report, path.resolve(process.cwd(), output));\n    console.log(`The report has been has been saved to ${output}`);\n  }\n\n  if (add && report.missingKeys && report.missingKeys.length > 0) {\n    updater.addMissingKeys(report.missingKeys);\n    console.log('The missing keys have been added');\n  }\n\n  if (remove && report.unusedKeys && report.unusedKeys.length > 0) {\n    updater.removeUnusedKeys(report.unusedKeys);\n    console.log('The unused keys have been removed');\n  }\n\n  if (updater.hasChanges) {\n    updater.writeChanges();\n    console.log('Language files have been updated');\n  }\n\n  if (ci && Object.prototype.hasOwnProperty.call(report, 'missingKeys') && report.missingKeys !== undefined) {\n    const exitCode = report.missingKeys.length > 0 ? 1 : 0;\n    console.log(`[vue-i18n-extract] ${report.missingKeys.length} missing keys found.`);\n    process.exit(exitCode);\n  }\n}\n\nexport * from './vue-files';\nexport * from './language-files';\nexport * from './report';\n","import fs from 'fs';\n\nconst configFile = `\nmodule.exports = {\n  vueFilesPath: './', // The Vue.js file(s) you want to extract i18n strings from. It can be a path to a folder or to a file. It accepts glob patterns. (ex. *, ?, (pattern|pattern|pattern)\n  languageFilesPath: './', // The language file(s) you want to compare your Vue.js file(s) to. It can be a path to a folder or to a file. It accepts glob patterns (ex. *, ?, (pattern|pattern|pattern)\n  options: {\n    output: false, // false | string => Use if you want to create a json file out of your report. (ex. output.json)\n    add: false, // false | true => Use if you want to add missing keys into your json language files.\n    dynamic: false, // false | 'ignore' | 'report' => 'ignore' if you want to ignore dynamic keys false-positive. 'report' to get dynamic keys report.\n  }\n};\n`;\n\nexport function initCommand(): void {\n  fs.writeFileSync('vue-i18n-extract.config.js', configFile);\n}\n\n","import * as report from './report-command';\n\nexport * from './init-command';\n\nexport * from './types';\nexport * from './report-command';\n\n// Needed for compatibility with versions < 1.1.0 of vue-i18n-extract.\nexport default {\n  ...report\n};\n"],"names":["readVueFiles","src","isValidGlob","Error","targetFiles","glob","sync","length","map","f","fileName","replace","process","cwd","path","content","fs","readFileSync","getMatches","file","regExp","captureGroup","match","exec","line","substring","index","extractMethodMatches","methodRegExp","extractComponentMatches","componentRegExp","extractDirectiveMatches","directiveRegExp","extractI18nItemsFromVueFiles","sourceFiles","reduce","accumulator","methodMatches","componentMatches","directiveMatches","parseVueFiles","vueFilesPath","filesList","readLangFiles","langPath","resolve","extension","lastIndexOf","toLowerCase","isJSON","isYAML","langObj","JSON","parse","yaml","safeLoad","eval","extractI18nItemsFromLanguageFiles","languageFiles","language","flattenedObject","dot","Object","keys","forEach","key","push","LanguageFileUpdater","constructor","addMissingKeys","missingKeys","hasChanges","languageFile","item","includes","str","removeUnusedKeys","unusedKeys","delete","writeChanges","FileAccessLayer","write","rawJSON","stringify","endsWith","ext","stringifiedContent","safeDump","writeFileSync","parseLanguageFiles","languageFilesPath","VueI18NExtractReportTypes","mightBeUsedDynamically","languageItem","dynamicKeys","some","dynamicKey","extractI18NReport","parsedVueFiles","parsedLanguageFiles","reportType","Missing","Unused","dynamicReportEnabled","Dynamic","languageItems","vueItem","usedByVueItem","startsWith","filter","extracts","assign","writeReportToFile","report","writePath","reportString","Promise","reject","writeFile","err","createI18NReport","vueFiles","command","resolvedVueFiles","resolvedLanguageFiles","dynamic","All","reportFromConfigCommand","configFile","reportCommand","options","output","add","Boolean","findIndex","e","console","error","remove","ci","log","updater","info","table","prototype","hasOwnProperty","call","undefined","exitCode","exit","initCommand"],"mappings":"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"}